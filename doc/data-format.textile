* "Topic":#topic
* "Relation":#relation
* "Topic Type":#topic-type
** "Data Field":#data-field
*** "Auto-Completion":#auto-completion
* "Topic Map":#topic-map
* "Footnotes":#footnotes


h1(#topic). Topic

bc. {
    "id": 61,
    "type_uri": "de/deepamehta/core/topictype/Note",
    "label": "DeepaMehta 3",
    "properties": {
        "de/deepamehta/core/property/Title": "DeepaMehta 3",
        "de/deepamehta/core/property/Text":
            "<p>DeepaMehta 3 is a platform for collaboration and knowledge management.</p>
             <p>A complete rewrite of DeepaMehta 2.</p>",
        "de/deepamehta/core/property/DateCreated":  1278980093803,
        "de/deepamehta/core/property/DateModified": 1278980093803
    }
}

|_. Attribute     |_. Meaning                             |_. Format / Possible values                                  |
^.| @id@          | ID of the topic in the DB.            | A number (long).                                            |
^.| @type_uri@    | Relates to the topic's type.          | Matches a topic type's @uri@ attribute.                     |
^.| @label@       | The label used to display the topic.  | A string.                                                   |
^.| @properties@  | The topic's properties.               | An object. The keys matches a data field's @uri@ attribute. |


h1(#relation). Relation

bc. {
    "id": 205,
    "type_id": "TOPICMAP_TOPIC",
    "src_topic_id": 40,
    "dst_topic_id": 61,
    "properties": {
        "visibility": true,
        "x": 583.5069227125496,
        "y": 111.0725995968096
    }
}


h1(#topic-type). Topic Type

Use the following format when declaring topic types. Topic type declarations are usually made in the plugin's "types.json" file (see [[Plugin Development Guide]]).

Example of a topic type "Note" with 4 data fields, "Title", "Text", "Date Modified", and "Workspaces":

bc. {
    uri: "de/deepamehta/core/topictype/Note",
    fields: [
        {
            label: "Title",
            uri: "de/deepamehta/core/property/Title",
            data_type: "text",
            editor: "single line",
            renderer_class: "TextFieldRenderer",
            indexing_mode: "FULLTEXT"
        },
        {
            label: "Text",
            uri: "de/deepamehta/core/property/Text",
            data_type: "html",
            renderer_class: "HTMLFieldRenderer",
            indexing_mode: "FULLTEXT"
        },
        {
          label: "Date Modified",
          uri: "de/deepamehta/core/property/DateModified",
          data_type: "number",
          renderer_class: "NumberFieldRenderer",
          indexing_mode: "FULLTEXT_KEY"
        },
        {
          label: "Workspaces",
          uri: "de/deepamehta/core/property/Workspaces",
          data_type: "relation",
          related_type_uri: "de/deepamehta/core/topictype/Workspace",
          editor: "checkboxes",
          renderer_class: "ReferenceFieldRenderer",
          indexing_mode: "OFF"
        }
    ],
    view: {
        label: "Note",
        icon_src: "/de.deepamehta.3-client/images/pencil.png"
    },
    implementation: "PlainDocument"
}

Structurally a topic type definition consist of 4 attributes: @uri@, @fields@, @view@, and @implementation@.

|_. Attribute           |_. Meaning             |_. Format / Possible values            |_. Mandatory / Optional |
^.| @uri@
  | A globally unique identifier for the topic type.
  | By convention: a slash separated path of the form &lt;vendor name>/&lt;project name>/topictype/&lt;type name>[1].
    <br>
    In the example above the vendor name is "de/deepamehta", the project name is "core". "topictype" is a literal.
    <br>
    Vendor name and project name are lower-case. The Type name is camel-case. Usually the type name is a no-spaces variant of the type label (see @label@ attribute below).
    <br>
    The URI must contain no spaces and no special characters. 2 consecutive slashes are prohibited.
  | Mandatory |
^.| @fields@
  | Data field definitions.
  | Array of data fields (see "Data Field":#data-field below).
  | Mandatory |
^.| @view@
  | Hints for rendering topics of this type.
  | An object with 3 possible attributes:
    <br>
    @label@ - the label used to display the topic type in human-readable form e.g. in a menu (mandatory).
    <br>
    @icon_src@ - the icon to render a topic of this type (optional).
    Usually an absolute path that starts with the symbolic name of the plugin that provides the icon file. If not specified a generic icon (gray dot) is used. The symbolic name is derived from the Maven group ID and artifact ID of the plugin.
    <br>
    @label_field@ _not yet implemented_ - the URI of the data field used to render the topic title (optional).
    If not specified the first data field is used.
  | Mandatory |
^.| @implementation@
  | JavaScipt class that implements the look & feel of topics of this type.
  | The DM3 core provides only one implementation: @PlainDocument@.
    <br>
    Further implementations can be provided by DeepaMehta 3 plugins.
  | Mandatory |

<br><br>
*Note:* when a topic type is requested via the DeepaMehta [[REST API]]#get-topic-type-by-id 2 additional attributes are returned in the response topic type: @id@, and @type_uri@.

|_. Attribute      |_. Meaning                                  |_. Format / Possible values                          |
^.| @id@           | The topic ID of this topic type in the DB. | A number (long).                                    |
^.| @type_uri@     | The topic type of this topic type.         | Is always @de/deepamehta/core/topictype/TopicType@. |


h2(#data-field). Data Field

|_. Attribute           |_. Meaning             |_. Format / Possible values            |_. Mandatory / Optional |
^.| @uri@
  | A globally unique identifier for the data field.
  | By convention: a slash separated path of the form &lt;vendor name>/&lt;project name>/property/&lt;property name>[1].
    <br>
    In the example above the vendor name is "de/deepamehta", the project name is "core". "property" is a literal.
    <br>
    Vendor name and project name are lower-case. The property name is camel-case. Usually the property name is a no-spaces variant of the property label (see @view@ / @label@ attribute below).
    <br>
    The URI must contain no spaces and no special characters. 2 consecutive slashes are prohibited.                                                   
    <br>
    All data field URIs within a topic type definition must be different.
  | Mandatory. |
^.| @data_type@
  | The data field's type.
  | The DeepaMehta 3 core provides 5 data types:
        @text@,     the field holds arbitrary (plain) text.
        @number@,   the field holds a number.
        @date@,     the field holds a date.
        @html@,     the field holds arbitrary styled text.
        @relation@, the field holds relations to other topics of a certain type. The related topic type is specified by the *related_type_uri* attribute.
    <br>
    Further data types can be provided by DeepaMehta 3 plugins.
  | Optional.
    <br>
    Default is @text@. |
^.| @related_type_uri@
  | The related topic type.
    <br>
    Applicable only to data fields of type *relation*.
  | A topic type URI (see "Topic Type":#topic-type above).
  | Mandatory for data fields of type *relation*. |
^.| @label@
  | The label used to display the property in human-readable form e.g. on an input field of a form.
  | A string.
  | Mandatory. |
^.| @editor@
  | Customizes the rendering of the data field in a form.
    <br>
    Applicable only to data fields of type *text* or *relation*.
  | For *text* fields: @single line@ (default) or @multi line@. In case of "multi line" another attribute may be provided: *lines*.
    <br>
    For *relation* fields: @checkboxes@. More possible values in the future.
  | Optional. |
^.| @lines@
  | The vertical size of text input fields.
    <br>
    Applicable only to *html* or multi-line *text* data fields.
  | A number.
  | Optional.
    <br>
    Default is @30@ lines. |
^.| @renderer_class@
  | The JavaScript class the DeepaMehta 3 client uses to render the data field.
  | For each of the 5 core data types the DeepaMehta 3 client provides a corresponding data field renderer:
    @TextFieldRenderer@
    @NumberFieldRenderer@
    @DateFieldRenderer@
    @HTMLFieldRenderer@
    @ReferenceFieldRenderer@
    <br>
    Further data field renderers can be provided by DeepaMehta 3 plugins.
  | Optional.
    <br>
    Depending on the data field's type the respective default renderer is used. |
^.| @indexing_mode@
  | Controls how the data field's value is indexed.
  | @OFF@
    @KEY@
    @FULLTEXT@
    @FULLTEXT_KEY@
  | Optional.
    <br>
    Default is @OFF@. |


h3(#auto-completion). Auto-Completion

_not yet implemented_

Data fields feature auto-completion by declaration. To activate auto-completion add the @autocomplete_indexes@ and @autocomplete_style@ attributes to the data field definition.
Note: auto-completion is supported only for *single line* text fields

Example:

bc. {
    uri: ...,
    data_type: "text",
    editor: "single line",
    autocomplete_indexes: ["dm3-contacts", "dm3-workspaces"],
    autocomplete_style: "item list"
},

|_. Attribute                 |_. Meaning               |_. Format / Possible values    |_. Mandatory / Optional |
^.| @autocomplete_indexes@
  | The Lucene fulltext indexes to be searched.
  | An array of fulltext index function names.
    <br>
    Note: fulltext index functions are provided by DeepaMehta 3 plugins. The "DM3 Contacts" plugin e.g. provides the fulltext index function "dm3-contacts".
  | To activate auto-completion this attribute is mandatory. |
^.| @autocomplete_style@
  | Controls how the selected suggestion is inserted into the data field.
  | 2 possible values:
    <br>
    @default@ - The selected suggestion replaces the field's content.
    <br>
    @item list@ - The selected suggestion is appended to the field's content (using a comma as separator)
  | Optional. |


h1(#topic-map). Topic Map

When a topic map is requested via the DeepaMehta [[REST API]]#get-topic-map-by-id the response looks like this:

bc. {
    "topics": [
        {
            "id": 67,
            "type_uri": "de/deepamehta/core/topictype/SearchResult",
            "label": "Richter",
            "properties": {
                "de/deepamehta/core/property/DateModified": 1278987883338
            },
            "visualization": {
              "x": 230.2720206072554, "y": 397.7343209804967,
              "visibility": true
            },
            "ref_id": 240
        },
        {
            "id": 42,
            "type_uri": "de/deepamehta/core/topictype/Note",
            "label": "Jörg Richter",
            "properties": {
                "de/deepamehta/core/property/DateModified": 1278736576165
            },
            "visualization": {
                "x": 436.61296997382306, "y": 314.2628641165793,
                "visibility": true
            },
            "ref_id": 243
        },
        {
            "id": 61,
            "type_uri": "de/deepamehta/core/topictype/Note",
            "label": "DeepaMehta 3",
            "properties": {
                "de/deepamehta/core/property/DateModified": 1278980093803
            },
            "visualization": {
                "x": 501.99434025678784, "y": 511.70696080848575,
                "visibility": true
            },
            "ref_id": 246
        }
    ],
    "relations":[
        {
            "id": 238,
            "type_id": "SEARCH_RESULT",
            "src_topic_id": 67, "dst_topic_id": 42,
            "properties": {},
            "ref_id": 68
        },
        {
            "id": 206,
            "type_id": "RELATION",
            "src_topic_id": 42, "dst_topic_id": 61,
            "properties": {},
            "ref_id": 69
        }
    ]
}

A topic map consist of an array of @topics@ and an array of @relations@. The format of a "Topic":#topic resp. "Relation":#relation is basically as described above, with 2 additions:

1. A topic has a @visualization@ object with 3 attributes:

|_. Attribute       |_. Meaning                                         |
^.| @x@, @y@        | Coordinates of the topic within the topic map.    |
^.| @visibility@    | Is the topic visible (@true@) or invisible (@false@) in the topic map?
                      Setting a topic to invisible allows the topic to keep its coordinates within the topic map.                                                              |

2. A topic and a relation have an additional @ref_id@ attribute which is needed when updating the topic resp. relation references (e.g. when moving a topic on the topic map or removing a relation from the topic map).


h1(#footnotes). Footnotes

fn1. Formally this format actually isn't an URI, e.g. a scheme is missing. From an URI the @uri@ attribute here just inherits the notion of a "globally unique identifier". The @uri@ attribute should be renamed.
