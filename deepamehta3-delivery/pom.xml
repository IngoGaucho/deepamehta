<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>DeepaMehta 3 Delivery</name>
    <groupId>de.deepamehta</groupId>
    <artifactId>deepamehta3-delivery</artifactId>
    <version>0.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>de.deepamehta</groupId>
        <artifactId>deepamehta3-parent</artifactId>
        <version>1</version>
        <relativePath>../deepamehta3-parent/pom.xml</relativePath>
    </parent>

    <properties>
        <org.osgi.service.http.port>8080</org.osgi.service.http.port>
        <deepamehta3.database.path>${project.basedir}/../deepamehta-db</deepamehta3.database.path>
        <file.encoding>UTF-8</file.encoding>
        <java.util.logging.config.file>
            ${project.basedir}/distribution/logging.properties
        </java.util.logging.config.file>
    </properties>

    <profiles>
        <profile>
            <id>build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>third-party</module>
                <module>felix-provision</module>
                <module>dm3-bundles</module>
                <module>distribution</module>
            </modules>
        </profile>

        <profile>
            <id>development</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.ops4j</groupId>
                        <artifactId>maven-pax-plugin</artifactId>
                        <configuration>
                            <deployPoms>felix-provision/pom.xml,third-party/pom.xml</deployPoms>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <!-- hot deploy distribution bundles from target -->
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.fileinstall</artifactId>
                    <version>3.1.10</version>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.bundlerepository</artifactId>
                    <version>1.6.4</version>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.webconsole</artifactId>
                    <version>3.1.8</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.metatype</artifactId>
                    <version>1.0.4</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.shell</artifactId>
                    <version>1.4.2</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.scr</artifactId>
                    <version>1.6.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.log</artifactId>
                    <version>1.0.0</version>
                </dependency>
            </dependencies>

            <properties>
                <felix.fileinstall.dir>
                    <![CDATA[
                        ${project.basedir}/../deepamehta3-core/target,
                        ${project.basedir}/../deepamehta3-server/target,
                        ${project.basedir}/../deepamehta3-webclient/target,
                        ${project.basedir}/../deepamehta3-notes/target,
                        ${project.basedir}/../deepamehta3-contacts/target,
                        ${project.basedir}/../deepamehta3-workspaces/target,
                        ${project.basedir}/../deepamehta3-typeeditor/target
                    ]]>
                    <!--
                        ${project.basedir}/../deepamehta3-coretypes/target,
                        ${project.basedir}/../deepamehta3-time/target,
                        ${project.basedir}/../deepamehta3-topicmaps/target,
                        ${project.basedir}/../deepamehta3-iconpicker/target,
                        ${project.basedir}/../deepamehta3-projects/target,
                        ${project.basedir}/../deepamehta3-typesearch/target,
                        ${project.basedir}/../deepamehta3-files/target,
                        ${project.basedir}/../deepamehta3-filemanager/target,
                        ${project.basedir}/../deepamehta3-accesscontrol/target
                    -->
                </felix.fileinstall.dir>
                <!-- Watching only for jar files suppresses deployment of exploded bundles (which often fails).    -->
                <felix.fileinstall.filter>.*\\.jar</felix.fileinstall.filter>
                <!-- Setting "noInitialDelay" to true causes *synchronous* bundle starts in the order the watch    -->
                <!-- directories are defined! Furthermore the STARTED framework event is eventually fired. Default -->
                <!-- is noInitialDelay=false, which causes *asynchronous* bundle starts in arbitrary order.        -->
                <felix.fileinstall.noInitialDelay>true</felix.fileinstall.noInitialDelay>
                <!-- To see any File Install logging set the level to at least 4.                                  -->
                <felix.fileinstall.log.level>0</felix.fileinstall.log.level>
                <felix.log.level>2</felix.log.level>
                <obr.repository.url>file:${user.home}/.m2/repository/repository.xml</obr.repository.url>
            </properties>
        </profile>

        <profile>
            <id>neo4j</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2</version>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <includePluginDependencies>true</includePluginDependencies>
                            <mainClass>org.neo4j.shell.StartClient</mainClass>
                            <arguments>
                                <argument>-path=${deepamehta3.database.path}</argument>
                                <argument>-v</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-shell</artifactId>
                    <version>1.2-1.2</version>
                    <!--version>1.3.M04</version-->
                </dependency>
                <dependency>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-kernel</artifactId>
                    <version>1.2-1.2</version>
                    <!--version>1.3.M04</version-->
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>

            <!-- clean goal deletes bundles and container configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>runner</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.ops4j</groupId>
                    <artifactId>maven-pax-plugin</artifactId>
                    <version>1.4</version>
                    <configuration>
                        <runner>1.6.1</runner>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
